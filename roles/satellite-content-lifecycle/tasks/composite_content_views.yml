---
# Composite Content View Management Tasks
- name: "Create composite content views"
  uri:
    url: "https://{{ satellite_server_url }}/katello/api/organizations/{{ organization_id }}/content_views"
    method: POST
    user: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    force_basic_auth: yes
    validate_certs: yes
    body_format: json
    body:
      name: "{{ item.name }}"
      label: "{{ item.label }}"
      description: "{{ item.description }}"
      composite: true
      auto_publish: "{{ item.auto_publish | default(true) }}"
      solve_dependencies: "{{ item.solve_dependencies | default(true) }}"
    status_code: [200, 201, 422]
  loop: "{{ composite_content_views }}"
  when: 
    - item.name not in (existing_content_views.json.results | map(attribute='name') | list)
    - not dry_run | bool
  register: composite_cv_creation
  tags:
    - composite-content-views

- name: "Get updated content view list (including composites)"
  uri:
    url: "https://{{ satellite_server_url }}/katello/api/organizations/{{ organization_id }}/content_views"
    method: GET
    user: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    force_basic_auth: yes
    validate_certs: yes
  register: all_content_views_with_composite
  tags:
    - composite-content-views

- name: "Add component content views to composite"
  uri:
    url: "https://{{ satellite_server_url }}/katello/api/content_views/{{ composite_cv_id }}/content_view_components"
    method: POST
    user: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    force_basic_auth: yes
    validate_certs: yes
    body_format: json
    body:
      content_view_version_id: "{{ component_version_id }}"
      latest: true
    status_code: [200, 201, 422]
  vars:
    composite_cv_id: >-
      {{
        all_content_views_with_composite.json.results |
        selectattr('name', 'equalto', item.name) |
        map(attribute='id') |
        first
      }}
    component_version_id: >-
      {{
        cv_versions_for_promotion.results |
        selectattr('item.name', 'equalto', component_cv) |
        map(attribute='json.results') |
        first |
        first |
        attribute('id')
      }}
  loop: "{{ composite_content_views }}"
  with_items: "{{ item.component_content_views }}"
  loop_control:
    loop_var: component_cv
  when:
    - item.component_content_views is defined
    - not dry_run | bool
  register: composite_component_assignment
  tags:
    - composite-content-views

- name: "Publish composite content views"
  uri:
    url: "https://{{ satellite_server_url }}/katello/api/content_views/{{ composite_cv_id }}/publish"
    method: POST
    user: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    force_basic_auth: yes
    validate_certs: yes
    body_format: json
    body:
      description: "Composite CV published by Ansible on {{ ansible_date_time.iso8601 }}"
    status_code: [200, 201, 422]
  vars:
    composite_cv_id: >-
      {{
        all_content_views_with_composite.json.results |
        selectattr('name', 'equalto', item.name) |
        map(attribute='id') |
        first
      }}
  loop: "{{ composite_content_views }}"
  when: not dry_run | bool
  register: composite_publish_tasks
  tags:
    - composite-content-views

- name: "Get latest composite content view versions"
  uri:
    url: "https://{{ satellite_server_url }}/katello/api/content_views/{{ composite_cv_id }}/content_view_versions"
    method: GET
    user: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    force_basic_auth: yes
    validate_certs: yes
  vars:
    composite_cv_id: >-
      {{
        all_content_views_with_composite.json.results |
        selectattr('name', 'equalto', item.name) |
        map(attribute='id') |
        first
      }}
  loop: "{{ composite_content_views }}"
  register: composite_cv_versions
  tags:
    - composite-content-views

- name: "Promote composite content views to lifecycle environments"
  uri:
    url: "https://{{ satellite_server_url }}/katello/api/content_view_versions/{{ latest_composite_version_id }}/promote"
    method: POST
    user: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    force_basic_auth: yes
    validate_certs: yes
    body_format: json
    body:
      environment_ids: ["{{ target_env_id }}"]
      description: "Promoted to {{ target_env_name }} by Ansible"
    status_code: [200, 201, 422]
  vars:
    latest_composite_version_id: >-
      {{
        composite_cv_versions.results |
        selectattr('item.name', 'equalto', item.name) |
        map(attribute='json.results') |
        first |
        first |
        attribute('id')
      }}
    target_env_id: "{{ lifecycle_environment_mapping[target_env_name] }}"
  loop: "{{ composite_content_views }}"
  with_items: "{{ item.lifecycle_environments }}"
  loop_control:
    loop_var: target_env_name
  when:
    - item.lifecycle_environments is defined
    - not dry_run | bool
  register: composite_promotion_tasks
  tags:
    - composite-content-views

- name: "Display composite content view status"
  debug:
    msg:
      - "Composite Content View: {{ item.name }}"
      - "Auto Publish: {{ item.auto_publish }}"
      - "Component Views: {{ item.component_content_views | join(', ') if item.component_content_views is defined else 'None' }}"
      - "Target Environments: {{ item.lifecycle_environments | join(', ') if item.lifecycle_environments is defined else 'None' }}"
  loop: "{{ composite_content_views }}"
  when: debug_mode | bool
  tags:
    - composite-content-views
