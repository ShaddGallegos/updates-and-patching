---
# Vulnerability Scanner Playbook
# Modern vulnerability scanning and automated remediation
# Converted from: scripts/vulnerability-scanner.sh

- name: Vulnerability Scanner
  hosts: "{{ target_hosts | default('all') }}"
  become: true
  gather_facts: true
  
  vars:
    scan_only: "{{ scan_only | default(true) }}"
    auto_remediate: "{{ auto_remediate | default(false) }}"
    report_dir: "{{ report_dir | default('/tmp/vulnerability_reports') }}"
    
    # High-priority CVEs to check (as of 2024)
    cve_database:
      CVE-2024-6387: "OpenSSH regreSSHion vulnerability - Critical RCE"
      CVE-2024-1086: "Linux kernel use-after-free vulnerability"
      CVE-2024-0727: "OpenSSL denial of service vulnerability"
      CVE-2023-4911: "GNU C Library buffer overflow (Looney Tunables)"
      CVE-2023-2680: "systemd privilege escalation vulnerability"
      CVE-2023-32233: "Linux kernel Netfilter vulnerability"
      CVE-2023-0386: "Linux kernel OverlayFS vulnerability"
      CVE-2022-47939: "Linux kernel ksmbd vulnerability"
      CVE-2022-3910: "Linux kernel io_uring vulnerability"
      CVE-2022-2588: "Linux kernel cls_route filter vulnerability"
  
  pre_tasks:
    - name: Create report directory
      file:
        path: "{{ report_dir }}"
        state: directory
        mode: '0755'
      delegate_to: localhost
      run_once: true
    
    - name: Install vulnerability scanning tools
      package:
        name:
          - yum-plugin-security
          - dnf-plugin-security
        state: present
      when: ansible_os_family == 'RedHat'
      ignore_errors: true
  
  tasks:
    - name: Check for security updates
      shell: |
        {% if ansible_distribution_major_version | int >= 8 %}
        dnf updateinfo list security --available
        {% else %}
        yum updateinfo list security --available
        {% endif %}
      register: security_updates
      changed_when: false
      failed_when: false
    
    - name: Parse security updates
      set_fact:
        security_vulnerabilities: "{{ security_updates.stdout_lines | select('match', '^(RHSA|CVE).*') | list }}"
    
    - name: Check installed package versions
      shell: rpm -qa | grep -E "(openssh|openssl|glibc|systemd|kernel)"
      register: installed_packages
      changed_when: false
      failed_when: false
    
    - name: Scan for specific CVEs
      shell: |
        rpm -q --changelog {{ item.split('-')[0] }} 2>/dev/null | grep -i "CVE\|security" | head -5
      register: cve_check
      changed_when: false
      failed_when: false
      loop: "{{ installed_packages.stdout_lines }}"
      when: installed_packages.stdout_lines | length > 0
    
    - name: Check kernel vulnerabilities
      shell: |
        uname -r
        rpm -q kernel --changelog | grep -i CVE | head -10
      register: kernel_vulns
      changed_when: false
      failed_when: false
    
    - name: Apply security patches (if auto-remediate enabled)
      dnf:
        name: '*'
        state: latest
        security: true
      when:
        - auto_remediate | bool
        - ansible_distribution_major_version | int >= 8
      register: remediation_result
    
    - name: Apply security patches RHEL 7 (if auto-remediate enabled)
      yum:
        name: '*'
        state: latest
        security: true
      when:
        - auto_remediate | bool
        - ansible_distribution_major_version | int == 7
      register: remediation_result
  
  post_tasks:
    - name: Generate vulnerability report
      copy:
        content: |
          Vulnerability Scan Report
          =========================
          Hostname: {{ inventory_hostname }}
          OS: {{ ansible_distribution }} {{ ansible_distribution_version }}
          Kernel: {{ ansible_kernel }}
          Scan Date: {{ ansible_date_time.iso8601 }}
          
          Security Updates Available
          --------------------------
          {{ security_vulnerabilities | join('\n') }}
          
          Installed Security-Critical Packages
          ------------------------------------
          {{ installed_packages.stdout }}
          
          Kernel Security Information
          ---------------------------
          {{ kernel_vulns.stdout }}
          
          Remediation
          -----------
          Auto-Remediate: {{ auto_remediate }}
          {% if remediation_result is defined and remediation_result.changed %}
          Patches Applied: Yes
          {% else %}
          Patches Applied: No
          {% endif %}
        dest: "{{ report_dir }}/vulnerability_scan_{{ inventory_hostname }}_{{ ansible_date_time.date }}.txt"
      delegate_to: localhost
    
    - name: Display vulnerability summary
      debug:
        msg: |
          Vulnerability Scan Summary for {{ inventory_hostname }}
          =======================================================
          Security Updates Available: {{ security_vulnerabilities | length }}
          Auto-Remediate: {{ auto_remediate }}
          {% if remediation_result is defined and remediation_result.changed %}
          Patches Applied: Yes
          {% endif %}
