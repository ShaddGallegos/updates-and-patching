---
# Host Management Validation Tasks

- name: "Validate Satellite server connectivity"
  uri:
    url: "https://{{ satellite_server_url }}/api/status"
    method: GET
    user: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    force_basic_auth: yes
    validate_certs: yes
    timeout: 30
  register: satellite_status
  failed_when: satellite_status.status != 200
  tags:
    - validation

- name: "Get organization information"
  uri:
    url: "https://{{ satellite_server_url }}/katello/api/organizations"
    method: GET
    user: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    force_basic_auth: yes
    validate_certs: yes
  register: organizations
  tags:
    - validation

- name: "Extract organization ID"
  set_fact:
    organization_id: "{{ organizations.json.results | selectattr('name', 'equalto', satellite_organization) | map(attribute='id') | first }}"
  tags:
    - validation

- name: "Get available activation keys"
  uri:
    url: "https://{{ satellite_server_url }}/katello/api/organizations/{{ organization_id }}/activation_keys"
    method: GET
    user: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    force_basic_auth: yes
    validate_certs: yes
  register: available_activation_keys
  tags:
    - validation

- name: "Get available host collections"
  uri:
    url: "https://{{ satellite_server_url }}/katello/api/organizations/{{ organization_id }}/host_collections"
    method: GET
    user: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    force_basic_auth: yes
    validate_certs: yes
  register: available_host_collections
  tags:
    - validation

- name: "Validate activation keys exist"
  set_fact:
    available_ak_names: "{{ available_activation_keys.json.results | map(attribute='name') | list }}"
    available_hc_names: "{{ available_host_collections.json.results | map(attribute='name') | list }}"
  tags:
    - validation

- name: "Check single node activation key"
  fail:
    msg: "Activation key '{{ target_hosts.single_node.activation_key }}' not found"
  when:
    - target_hosts.single_node.hostname != ""
    - target_hosts.single_node.activation_key != ""
    - target_hosts.single_node.activation_key not in available_ak_names
    - validate_host_operations | bool
  tags:
    - validation

- name: "Check host group activation keys"
  fail:
    msg: "Activation key '{{ item.activation_key }}' not found for host group '{{ item.name }}'"
  loop: "{{ target_hosts.host_groups | default([]) }}"
  when:
    - item.activation_key not in available_ak_names
    - validate_host_operations | bool
  tags:
    - validation

- name: "Display validation summary"
  debug:
    msg:
      - "Satellite Server: {{ satellite_server_url }} - OK"
      - "Organization: {{ satellite_organization }} (ID: {{ organization_id }})"
      - "Available Activation Keys: {{ available_ak_names | length }}"
      - "Available Host Collections: {{ available_hc_names | length }}"
      - "Single Node Target: {{ target_hosts.single_node.hostname if target_hosts.single_node.hostname != '' else 'Not configured' }}"
      - "Host Groups: {{ target_hosts.host_groups | length if target_hosts.host_groups is defined else 0 }}"
      - "CVE Updates Enabled: {{ package_operations.cve_updates.enabled }}"
      - "Security Updates Enabled: {{ package_operations.security_updates.enabled }}"
      - "Insights Registration: {{ insights_config.auto_register }}"
      - "RHC Connection: {{ rhc_config.auto_connect }}"
  when: debug_mode | bool
  tags:
    - validation
